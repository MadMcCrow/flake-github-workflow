name: 'Build Nix Flake'

on:
  workflow_call:
      inputs:
        cachix-repository:
          type: string
          required: true
        nix_extra_config:
          type: string
          required: false
          default: |
            auto-optimise-store = true
            access-tokens = github.com=${{ github.token }}
            experimental-features = nix-command flakes
            substituters = https://cache.nixos.org/ https://nix-community.cachix.org
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs=
        jq-command:
          type: string
          required: true
      secrets:
        CACHIX_SIGNING_KEY:
          required: true

jobs:
 # generate JSONs for future builds and checks
  generate_matrix:
    runs-on: ubuntu-20.04
    outputs:
      matrix: ${{ steps.gen_matrix.outputs.vector }}
    steps :
      - uses: actions/checkout@v3
      - name: setup-nix
        uses: cachix/install-nix-action@v19
        with:
          extra_nix_config: ${{inputs.nix_extra_config}}
          install_url: https://releases.nixos.org/nix/nix-2.12.0/install
      - name: Generate flake.json
        run: |
          nix flake show --json > flake.json
      - id: gen_matrix
        run: |
          vector=$(jq -c '${{inputs.jq-command}}' < flake.json)
          echo "$vector"
          echo "vector=$vector" >> $GITHUB_OUTPUT

  # build new flake 
  build_flake:
    runs-on: ubuntu-20.04
    needs: [generate_matrix]
    strategy:
      fail-fast: false
      max-parallel: 5
      matrix:
        config: ${{fromJson(needs.generate_matrix.outputs.matrix)}}
    steps:
      - run: echo ${{ matrix.config }}
      - uses: actions/checkout@v3
      - name: setup-nix
        uses: cachix/install-nix-action@v19
        with:
          extra_nix_config: ${{inputs.nix_extra_config}}
          install_url: https://releases.nixos.org/nix/nix-2.12.0/install
      - name: Set up cachix
        uses: cachix/cachix-action@v11
        with:
          name: ${{inputs.cachix-repository}}
          signingKey: "${{ secrets.CACHIX_SIGNING_KEY }}"
          pathsToPush: result
      - name: Restore flake.lock
        uses: actions/download-artifact@v3
        with:
          name: flake_lock
      - name: Build everything
        run: |
          nix build .#${{ matrix.config }}